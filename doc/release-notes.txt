Release Notes for openMSX 0.12.0 (2015-09-12)
=============================================

This was going to be (mostly) a bug fix release. But at the end we also got
inspired by Grauw to add a lot of MIDI devices. And, reviewing what we changed
the last 10 months, we saw that we also got loads of help from several people
to add many new machine configurations and added some fun stuff like Sensor Kid
and (experimental) Beer IDE emulation. On the emulator features category we
give you stuff like triplesize video recording, some TAS enhancements and a
callback for too fast VRAM access.
So, enjoy this 'various features and bug fixes' release!

Here's the list with all highlights and details:

MSX device support:
- fixed (S)RAM writing on turboR
- fixed border color in screen 11/12
- fixed some details of SD card emulation (found with FUZIX)
- fixed clipping bug in sprite-mode-1 drawing
- fixed crash in openMSX when using the AVT DPF-550 extension
- fixed support of 8kB RS-232C ROMs (which is the only correct size!)
- fixed emulation of joystick mode of the mouse
- fixed broken MegaFlashROM SCC+ (introduced with openMSX 0.11.0)
- improved trackball movement emulation so that JoyTest can also detect it like
  on real hardware
- fixed touchpad joystick pins (fixing detection in JoyTest)
- tweaked volumes of SFG-01/05 against the PSG
- added Panasonic FS-A1WSX/WX variant ot the MSX-MUSIC mapper
- added proper YM2148 emulation (MIDI in/out for Yamaha SFG modules)
- added proper MC6850 emulation (MIDI in/out for Philips Music Module)
- added emulation of FAC MIDI Interface
- added emulation of Sensor Kid, ported from yayaMSX2SK, which is based on
  Mr. Takeda's Common Source Code Project
- added emulation of BeerIDE (experimental)
- added many new machines: Canon V-25 (thanks to Rudi Westerhof), Canon V-8,
  Fenner/Samsung SPC-800, Hitachi MB-H1, Toshiba HX-10D (thanks to Ricardo
  Jurcyk Pinheiro), Canon V-10, Canon V-20 (JP), Spectravideo SVI-728 (ES),
  Mitsubishi ML-TS2 (partly, it's still work-in-progress), Sony HB-101 (JP),
  Sony HB-201 (JP), Sanyo MPC-6, Mitsubishi ML-F120 and ML-F110 and Hitachi
  MB-H3 (thanks to Werner Kai) and Yamaha AX350IIF (thanks to Rudolf Gutlich)

New or improved emulator features:
- added "too_fast_vram_access_callback": you can now run a Tcl script when the
  running MSX software accesses VRAM too fast, e.g. break to debug
- added display of 'movie length' in TAS mode. This is the length of your
  'movie' if you upload it to tasvideos.org
- added -triplesize to video recorder: allows creation of video files in
  960x720 pixels, for which YouTube renders videos at 60 fps.
- some fixes in keyboard mappings
- fixed slow console when emulation speed is very low
- add a snapshot 'near the end' to the OMR when saving it, allowing quicker
  continuation of the replay after loading it
- similarly, add snapshots when fast-forwarding to the target time, so they
  can be used to jump back more quickly
- show reverse bar in green when replaying in viewonly mode
- added a converter from/to OMR to/from text, which allows you to more easily
  edit the OMR outside of openMSX
- improved implementation of 'auto-save' feature of replays: the setting will
  now persist over openMSX sessions
- added an OSD overlay for Metal Gear

Build system, packaging, documentation:
- replace mingw32 build support with MinGW-w64 build support on Windows
- updated our website and other URL's to point to http://openmsx.org/ or
  GitHub

And of course the usual various bug fixes and performance improvements.

In "doc/manual/index.html" you can find a set of HTML manuals for openMSX.
Make sure you read this if you haven't used openMSX before, but also to learn
more about the new and changed features.

CPU and graphics performance varies a lot, depending on the openMSX settings
and the MSX hardware and software you're emulating. Some things run fine on a
200 MHz machine, others are slow on a 2 GHz machine. For performance tuning
tips, see the Setup Guide.

openMSX is confirmed to run on the following operating systems: Linux, Windows,
Mac OS X, FreeBSD, OpenBSD and NetBSD; on x86, x86-64, PPC, ARM, MIPS and Sparc
CPU's. Running on other operating systems (wherever SDL runs) or CPU's should
be possible, but may require some modifications to the build system. If you are
compiling on a new platform, please share your experiences (see below for
contact info), so we can make openMSX more portable.

openMSX Home Page:
  http://openmsx.org/
Project page on GitHub:
  https://github.com/openMSX
Contact options:
- Talk to us on #openmsx on irc.freenode.net.
- Use the forum on http://www.msx.org/forum/semi-msx-talk/openmsx
- File a ticket on https://github.com/openMSX/openMSX/issues

Thanks to all contributors for their feedback, support, bug reports, testing,
coding and other help!

Have fun with your emulated MSX!
                                        the openMSX developers
